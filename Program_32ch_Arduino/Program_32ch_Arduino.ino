#include <SoftwareSerial.h>

SoftwareSerial Dataku(2,3);//RX,TX

void setup() {
  // put your setup code here, to run once:
  Serial.begin(9600);
  Dataku.begin(9600);
}
void loop(){
  
}

void maju() {
  movex(1, 1800, 10); 
  movex(2, 1700, 10); 
  movex(3, 1723, 10);
  movex(5, 1250, 10);
  movex(9, 1500, 10);
  movex(10, 1882, 10);
  movex(11, 1770, 10);
  movex(13, 1800, 10);
  movex(17, 1600, 10);
  movex(18, 1300, 10);
  movex(19, 1300, 10);
  movex(21, 1600, 10); 
  movex(22, 1500, 10); 
  Dataku.println();
  delay(10);
  movex(2, 1500, 10);
  movex(3, 1523, 10);
  movex(5, 1250, 10); 
  movex(10, 1582, 10);
  movex(11, 1570, 10);
  movex(13, 1800, 10);
  movex(18, 1550, 10);
  movex(19, 1500, 10);
  movex(21, 1500, 10);
  movex(22, 1500, 10);
  Dataku.println();
  delay(10);
  movex(1, 1400, 10);
  movex(5, 1450, 10);
  movex(6, 1700, 10);
  movex(7, 1677, 10);
  movex(9, 1200, 10);
  movex(13, 1500, 10);
  movex(14, 1400, 10);
  movex(15, 1300, 10);
  movex(17, 1800, 10);
  movex(18, 1550, 10);
  movex(21, 1200, 10);
  movex(22, 1300, 10);
  movex(23, 1200, 10);
  Dataku.println();
  delay(10);
  movex(1, 1400, 10);
  movex(2, 1500, 10);
  movex(3, 1523, 10);
  movex(5, 1450, 10);
  movex(6, 1500, 10);
  movex(7, 1477, 10);
  movex(9, 1200, 10);
  movex(10, 1582, 10);
  movex(11, 1570, 10);
  movex(13, 1500, 10);
  movex(14, 1600, 10);
  movex(15, 1500, 10);
  movex(17, 1800, 10);
  movex(18, 1550, 10);
  movex(19, 1500, 10);
  movex(21, 1200, 10);
  movex(22, 1600, 10);
  movex(23, 1500, 10);
  Dataku.println();
  delay(10); 
}
//void move (int servo, int position, int time){
//  Serial.print("#");
//  Serial.print(servo);
//  Serial.print("P");
//  Serial.print(position);
//  Serial.print("T");
//  Serial.println(time);
//}
void mundur(){
  movex(1, 1500, 10); 
  movex(2, 1500, 10); 
  movex(3, 1523, 10);
  movex(5, 1350, 10);
  movex(6, 1500, 10);
  movex(7, 1477, 10);
  movex(9, 1300, 10);
  movex(10, 1582, 10);
  movex(11, 1570, 10);
  movex(13, 1700, 10);
  movex(14, 1600, 10);
  movex(15, 1500, 10); 
  movex(17, 1600, 10);
  movex(18, 1500, 10);
  movex(19, 1500, 10);
  movex(21, 1500, 10);
  movex(22, 1600, 10);
  movex(23, 1600, 10); 
  Dataku.println();
  delay(10);
  movex(1, 1700, 10);
  movex(2, 1500, 10);
  movex(3, 1523, 10); 
  movex(5, 1150, 10);
  movex(6, 1800, 10);
  movex(7, 1777, 10);
  movex(9, 1500, 10);
  movex(10, 1582, 10);
  movex(11, 1570, 10);
  movex(13, 1700, 10);
  movex(14, 1400, 10);
  movex(15, 1300, 10);
  movex(17, 1400, 10);
  movex(18, 1500, 10);
  movex(19, 1500, 10);
  movex(21, 1700, 10);
  movex(22, 1300, 10);
  movex(23, 1300, 10);
  Dataku.println();
  delay(10);
  movex(1, 1700, 10);
  movex(5, 1150, 10);
  movex(6, 1500, 10);
  movex(7, 1477, 10);
  movex(9, 1500, 10);
  movex(13, 1700, 10);
  movex(14, 1600, 10);
  movex(15, 1500, 10);
  movex(17, 1400, 10);
  movex(21, 1700, 10);
  movex(22, 1600, 10);
  movex(23, 1500, 10);
  Dataku.println();
  delay(10);
  movex(1, 1500, 10);
  movex(2, 1700, 10);
  movex(3, 1723, 10);
  movex(5, 1450, 10);
  movex(6, 1500, 10);
  movex(7, 1477, 10);
  movex(9, 1300, 10);
  movex(10, 1882, 10);
  movex(11, 1770, 10);
  movex(13, 1400, 10);
  movex(14, 1600, 10);
  movex(15, 1500, 10);
  movex(17, 1700, 10);
  movex(18, 1300, 10);
  movex(19, 1300, 10);
  movex(21, 1400, 10);
  movex(22, 1600, 10);
  movex(23, 1600, 10);
  Dataku.println();
  delay(10);
  movex(2, 1500, 10);
  movex(3, 1523, 10);
  movex(10, 1582, 10);
  movex(11, 1570, 10);
  movex(18, 1600, 10);
  movex(19, 1500, 10);
  Dataku.println();
  delay(10);
}

void belok_kiri(){
  movex(1, 1500, 10); 
  movex(2, 1500, 10); 
  movex(3, 1523, 10);
  movex(5, 1350, 10);
  movex(6, 1550, 10);
  movex(7, 1477, 10);
  movex(9, 1300, 10);
  movex(10, 1582, 10);
  movex(11, 1570, 10);
  movex(13, 1700, 10);
  movex(14, 1600, 10);
  movex(15, 1500, 10); 
  movex(17, 1600, 10);
  movex(18, 1500, 10);
  movex(19, 1500, 10);
  movex(21, 1500, 10);
  movex(22, 1600, 10);
  movex(23, 1600, 10); 
  Dataku.println();
  delay(10);
  movex(5, 1150, 10);
  movex(6, 1750, 10);
  movex(7, 1777, 10); 
  movex(13, 1500, 10);
  movex(14, 1400, 10);
  movex(15, 1300, 10);
  movex(18, 1500, 10);
  movex(19, 1500, 10);
  movex(21, 1300, 10);
  movex(22, 1300, 10);
  movex(23, 1300, 10);
  Dataku.println();
  delay(10);
  movex(6, 1550, 10);
  movex(7, 1477, 10);
  movex(14, 1600, 10);
  movex(15, 1500, 10);
  movex(22, 1600, 10);
  movex(23, 1600, 10);
  Dataku.println();
  delay(10);
  movex(1, 1300, 10);
  movex(2, 1700, 10);
  movex(3, 1723, 10);
  movex(5, 1350, 10);
  movex(9, 1100, 10);
  movex(10, 1882, 10);
  movex(11, 1770, 10);
  movex(13, 1700, 10);
  movex(17, 1400, 10);
  movex(18, 1300, 10);
  movex(19, 1300, 10);
  movex(21, 1500, 10);
  Dataku.println();
  delay(10);
  movex(2, 1500, 10);
  movex(3, 1523, 10);
  movex(10, 1582, 10);
  movex(11, 1570, 10);
  movex(18, 1600, 10);
  movex(19, 1500, 10);
  Dataku.println();
  delay(10);
}

void belok_kanan(){
  movex(1, 1500, 10); 
  movex(2, 1500, 10); 
  movex(3, 1523, 10);
  movex(5, 1350, 10);
  movex(6, 1550, 10);
  movex(7, 1477, 10);
  movex(9, 1300, 10);
  movex(10, 1582, 10);
  movex(11, 1570, 10);
  movex(13, 1700, 10);
  movex(14, 1600, 10);
  movex(15, 1500, 10); 
  movex(17, 1600, 10);
  movex(18, 1550, 10);
  movex(19, 1500, 10);
  movex(21, 1500, 10);
  movex(22, 1600, 10);
  movex(23, 1400, 10); 
  Dataku.println();
  delay(10);
  movex(1, 1700, 10);
  movex(2, 1700, 10);
  movex(3, 1723, 10);
  movex(5, 1350, 10);
  movex(6, 1500, 10);
  movex(7, 1477, 10); 
  movex(9, 1500, 10);
  movex(10, 1882, 10);
  movex(11, 1770, 10);
  movex(13, 1700, 10);
  movex(15, 1500, 10);
  movex(17, 1800, 10);
  movex(18, 1250, 10);
  movex(19, 1300, 10);
  movex(21, 1500, 10);
  movex(22, 1600, 10);
  movex(23, 1400, 10);
  Dataku.println();
  delay(10);
  movex(2, 1500, 10);
  movex(3, 1523, 10);
  movex(10, 1582, 10);
  movex(11, 1570, 10);
  movex(18, 1550, 10);
  movex(19, 1500, 10);
  Dataku.println();
  delay(10);
  movex(1, 1500, 10);
  movex(5, 1550, 10);
  movex(6, 1700, 10);
  movex(7, 1577, 10);
  movex(9, 1300, 10);
  movex(13, 1900, 10);
  movex(14, 1300, 10);
  movex(15, 1200, 10);
  movex(17, 1600, 10);
  movex(21, 1700, 10);
  movex(22, 1300, 10);
  movex(23, 1200, 10);
  Dataku.println();
  delay(10);
  movex(6, 1500, 10);
  movex(7, 1477, 10);
  movex(14, 1600, 10);
  movex(15, 1500, 10);
  movex(22, 1600, 10);
  movex(23, 1500, 10);
  Dataku.println();
  delay(10);
  movex(5, 1350, 10);
  movex(13, 1700, 10);
  movex(21, 1500, 10);
  Dataku.println();
  delay(10);
}

void movex (int servo, int positionx, int timex){
  Dataku.print("#");
  Dataku.print(servo);
  Dataku.print("P");
  Dataku.print(positionx);
  Dataku.print("T");
  Dataku.print(timex);
}
